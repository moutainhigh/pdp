package com.pd.pdp.mapper;

import com.pd.pdp.entity.AuthEntity;
import com.pd.pdp.vo.AuthPageVO;
import com.pd.pdp.vo.PageVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface AuthEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_auth
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_auth
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int insert(AuthEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_auth
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int insertSelective(AuthEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_auth
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    AuthEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_auth
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int updateByPrimaryKeySelective(AuthEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_auth
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int updateByPrimaryKey(AuthEntity record);

    /**
     * @Author pdp
     * @Description 根据角色查询所有权限
     * @Date 4:49 下午 2020/10/15
     * @Param [roleIds]
     * @return java.util.List<com.pd.pdp.entity.AuthEntity>
     **/
    
    List<AuthEntity> selectAuthByRoleIds(@Param("roleIds") List<Integer> roleIds);

    /**
     * @Author pdp
     * @Description 根据角色和父级查询权限
     * @Date 4:51 下午 2020/10/15
     * @Param [roleIds, parentId]
     * @return java.util.List<com.pd.pdp.entity.AuthEntity>
     **/
    
    List<AuthEntity> selectAuthByParentId(@Param("roleIds") List<Integer> roleIds, @Param("parentId") Integer parentId);

    /**
     * @Author pdp
     * @Description 修改权限状态
     * @Date 10:14 上午 2020/10/18
     * @Param [ids, status]
     * @return int
     **/
    int updateAuthStatus(@Param("ids") List<String> ids, @Param("status") Integer status);

    /**
     * @Author pdp
     * @Description 查询权限总条数
     * @Date 1:21 下午 2020/10/18
     * @Param [pageVO]
     * @return int
     **/
    int selectAuthListCount(@Param("pageVO") PageVO<AuthPageVO> pageVO);

    /**
     * @Author pdp
     * @Description 分页查询权限
     * @Date 1:30 下午 2020/10/18
     * @Param [pageVO]
     * @return java.util.List<com.pd.pdp.entity.AuthEntity>
     **/
    List<AuthEntity> selectAuthList(@Param("pageVO") PageVO<AuthPageVO> pageVO);

    /**
     * @Author pdp
     * @Description 查询权限树
     * @Date 2:08 下午 2020/10/18
     * @Param []
     * @return java.util.List<com.pd.pdp.entity.AuthEntity>
     **/
    List<AuthEntity> selectAuthTree();
}