package com.pd.pdp.mapper;

import com.pd.pdp.entity.UserEntity;
import com.pd.pdp.vo.PageVO;
import com.pd.pdp.vo.UserPageVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface UserEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_user
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_user
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int insert(UserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_user
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int insertSelective(UserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_user
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    UserEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_user
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int updateByPrimaryKeySelective(UserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_user
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int updateByPrimaryKey(UserEntity record);

    /**
     * @Author pdp
     * @Description 登陆
     * @Date 4:46 下午 2020/10/15
     * @Param [account]
     * @return com.pd.pdp.entity.UserEntity
     **/
    UserEntity login(@Param("account") String account);

    /**
     * @Author pdp
     * @Description 根据用户ID查询密码
     * @Date 4:48 下午 2020/10/16
     * @Param [userId]
     * @return java.lang.String
     **/
    
    String selectPasswordByUserId(Integer userId);

    /**
     * @Author pdp
     * @Description 修改密码
     * @Date 9:35 上午 2020/10/17
     * @Param [userId, password]
     * @return int
     **/
    int updatePasswordByUserId(@Param("userId") Integer userId, @Param("password") String password);

    /**
     * @Author pdp
     * @Description 查询用户总条数
     * @Date 9:36 上午 2020/10/17
     * @Param [pageVO]
     * @return java.lang.Integer
     **/
    Integer selectUserListCount(@Param("pageVO") PageVO<UserPageVO> pageVO);

    /**
     * @Author pdp
     * @Description 分页查询用户
     * @Date 9:39 上午 2020/10/17
     * @Param [pageVO]
     * @return java.util.List<RoleEntity>
     **/
    List<UserEntity> selectUserList(@Param("pageVO") PageVO<UserPageVO> pageVO);

    /**
     * @Author pdp
     * @Description 校验账号是否存在
     * @Date 4:31 下午 2020/10/21
     * @Param [account, id]
     * @return int
     **/
    int checkAccountRepeat(@Param("account") String account, @Param("id") Integer id);

    /**
     * @Author pdp
     * @Description 校验手机号是否存在
     * @Date 4:32 下午 2020/10/21
     * @Param [phone, id]
     * @return int
     **/
    int checkPhoneRepeat(@Param("phone") String phone, @Param("id") Integer id);
    
    /**
     * @Author pdp
     * @Description 删除用户
     * @Date 5:10 下午 2020/10/21
     * @Param [ids]
     * @return int
     **/
    int deleteUser(@Param("ids") List<String> ids);
}