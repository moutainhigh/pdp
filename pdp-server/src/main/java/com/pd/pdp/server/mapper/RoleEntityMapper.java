package com.pd.pdp.server.mapper;

import com.pd.pdp.server.vo.PageVO;
import com.pd.pdp.server.entity.RoleEntity;
import com.pd.pdp.server.vo.RolePageVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface RoleEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_role
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_role
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int insert(RoleEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_role
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int insertSelective(RoleEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_role
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    RoleEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_role
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int updateByPrimaryKeySelective(RoleEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table au_role
     *
     * @mbggenerated Thu Oct 15 13:19:35 CST 2020
     */
    int updateByPrimaryKey(RoleEntity record);

    /**
     * @Author pdp
     * @Description 根据用户查询角色
     * @Param [userId]
     * @return java.util.List<com.pd.pdp.entity.RoleEntity>
     **/
    List<RoleEntity> selectRoleByUserId(Integer userId);

    /**
     * @Author pdp
     * @Description 删除角色绑定的权限
     * @Param [roleId]
     * @return int
     **/
    int deleteRoleAuthByRoleId(Integer roleId);

    /**
     * @Author pdp
     * @Description 跟新权限状态
     * @Param [ids, status]
     * @return int
     **/
    int updateRoleStatus(@Param("ids") List<String> ids, @Param("status") Integer status);

    /**
     * @Author pdp
     * @Description 根据用户查询角色ID
     * @Param [userId]
     * @return java.util.List<java.lang.Integer>
     **/
    List<Integer> selectRoleIdsByUserId(Integer userId);

    /**
     * @Author pdp
     * @Description 查询角色总条数
     * @Param [pageVO]
     * @return java.lang.Integer
     **/
    Integer selectRoleListCount(@Param("pageVO") PageVO<RolePageVO> pageVO);

    /**
     * @Author pdp
     * @Description 分页查询角色
     * @Param [pageVO]
     * @return java.util.List<com.pd.pdp.entity.RoleEntity>
     **/
    List<RoleEntity> selectRoleList(@Param("pageVO") PageVO<RolePageVO> pageVO);

    /**
     * @Author pdp
     * @Description 查询所有角色
     * @Param []
     * @return java.util.List<com.pd.pdp.entity.RoleEntity>
     **/
    List<RoleEntity> selectAllRole();
}